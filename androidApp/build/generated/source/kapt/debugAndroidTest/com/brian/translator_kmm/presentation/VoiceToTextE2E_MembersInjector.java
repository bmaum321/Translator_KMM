// Generated by Dagger (https://dagger.dev).
package com.brian.translator_kmm.presentation;

import com.brian.translator_kmm.translate.domain.translate.TranslateClient;
import com.brian.translator_kmm.voicetotext.domain.VoiceToTextParser;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class VoiceToTextE2E_MembersInjector implements MembersInjector<VoiceToTextE2E> {
  private final Provider<VoiceToTextParser> fakeVoiceParserProvider;

  private final Provider<TranslateClient> fakeClientProvider;

  public VoiceToTextE2E_MembersInjector(Provider<VoiceToTextParser> fakeVoiceParserProvider,
      Provider<TranslateClient> fakeClientProvider) {
    this.fakeVoiceParserProvider = fakeVoiceParserProvider;
    this.fakeClientProvider = fakeClientProvider;
  }

  public static MembersInjector<VoiceToTextE2E> create(
      Provider<VoiceToTextParser> fakeVoiceParserProvider,
      Provider<TranslateClient> fakeClientProvider) {
    return new VoiceToTextE2E_MembersInjector(fakeVoiceParserProvider, fakeClientProvider);
  }

  @Override
  public void injectMembers(VoiceToTextE2E instance) {
    injectFakeVoiceParser(instance, fakeVoiceParserProvider.get());
    injectFakeClient(instance, fakeClientProvider.get());
  }

  @InjectedFieldSignature("com.brian.translator_kmm.presentation.VoiceToTextE2E.fakeVoiceParser")
  public static void injectFakeVoiceParser(VoiceToTextE2E instance,
      VoiceToTextParser fakeVoiceParser) {
    instance.fakeVoiceParser = fakeVoiceParser;
  }

  @InjectedFieldSignature("com.brian.translator_kmm.presentation.VoiceToTextE2E.fakeClient")
  public static void injectFakeClient(VoiceToTextE2E instance, TranslateClient fakeClient) {
    instance.fakeClient = fakeClient;
  }
}
