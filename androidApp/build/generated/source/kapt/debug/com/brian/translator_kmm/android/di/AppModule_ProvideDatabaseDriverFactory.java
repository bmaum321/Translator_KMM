// Generated by Dagger (https://dagger.dev).
package com.brian.translator_kmm.android.di;

import android.app.Application;
import com.squareup.sqldelight.db.SqlDriver;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDatabaseDriverFactory implements Factory<SqlDriver> {
  private final Provider<Application> appProvider;

  public AppModule_ProvideDatabaseDriverFactory(Provider<Application> appProvider) {
    this.appProvider = appProvider;
  }

  @Override
  public SqlDriver get() {
    return provideDatabaseDriver(appProvider.get());
  }

  public static AppModule_ProvideDatabaseDriverFactory create(Provider<Application> appProvider) {
    return new AppModule_ProvideDatabaseDriverFactory(appProvider);
  }

  public static SqlDriver provideDatabaseDriver(Application app) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideDatabaseDriver(app));
  }
}
